0. Все пути прописаны относительно src/
1. Реализация функции должна находиться в одноимённом файле в одном из 6 разделов: auxiliary, calculate, compare, copy, io, search
2. Если есть вспомогательная функция, которая используется в нескольких файлах, есть два возмоотл расположения её реализации:
    в common/common.c или в файле с вашей основной функцией. В любом случае сигнатуру функции (её объявление без реализации)
    расположить в headers/common.h. Это не касается основных функций, их сигнатуры находятся в s21_string.h и уже видны ото всюду.
3. Тесты в одноимённых разделах располагаются в unit_tests. Просто реализуете свой тестовый suite в соответствующем файле и всё.
    Отключить тот или иной тест можно в файле unit_tests/s21_string_tests_runner.c закомментировав соответсвующую строку (например,
    //srunner_add_suite(runner, s21_strlen_suite());).
4. Если есть вспомогательные тестирующие функции - расположить их в unit_tests/common_test.c и сигнатуру функции внести в
    headers/common_tests.h.
5. Если надо отдельно протестировать какие-то функции, то для этого есть файл debug_function.c, который собирается вместе с библиотекой
    s21_string с флагом -g, что даёт возможность отлаживать ваши функции. Только не говорите, что не знаете, как это делать
    (говорите, объясню).
6. Все цели, что прописаны в задании уже реализованы в Makefile. Просто придерживайтесь вышеприведённых правил и make всё сделает за вас.
    Примечания:
    * make test создаёт исполняемый файл s21_string_test.out. Его надо запустить, чтобы посмотреть на результат теста.
    Ниже будет описано как объединить два этих действия в одно.
    * make debug собирает debug_function.c и создаёт debug_function.out
    * make debug_test то же, что и make test, только позволяет вам ставить точки останова внутри тестов. ОЧЕНЬ ПОЛЕЗНО
6. Если вы пользуетесь vscode, то для вас будут работать конфигурации в ../.vscode/. В c_cpp_properties.json только includePath
    актуален, остальное относится только к моей системе, можете вообще удалить этот файл, а когда возникнут ошибки при #include,
    vscode предложит добавить пути к ненайденным хедерам автоматически. Всё остальное позволяет вам собирать и запускать тесты и
    отладку одним нажатием кнопки в разделе "Запуск и отладка" в панели слева. В левом вернем углу рядом с зелёной кнопкой будет
    выпадающее меню с 3 пунктами:
    Debug - собрать и запустить с возможностью отладки программу, полученную из файла debug_function.c
    Test - собрать и запустить s21_string_test.out
    Debug test - собрать и запустить с возможностью отладки s21_string_test.out
